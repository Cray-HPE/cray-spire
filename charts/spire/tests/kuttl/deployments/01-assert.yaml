#
# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-postgres
  namespace: spire
spec:
  replicas: 1
  serviceName: spire-postgres
  template:
    metadata:
      labels:
        application: spilo
        cluster-name: spire-postgres
        team: spire
      namespace: spire
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  application: spilo
                  cluster-name: spire-postgres
                  team: spire
              topologyKey: kubernetes.io/hostname
      containers:
        - env:
            - name: SCOPE
              value: spire-postgres
            - name: PGROOT
              value: /home/postgres/pgdata/pgroot
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PGUSER_SUPERUSER
              value: postgres
            - name: KUBERNETES_SCOPE_LABEL
              value: cluster-name
            - name: KUBERNETES_ROLE_LABEL
              value: spilo-role
            - name: PGPASSWORD_SUPERUSER
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres.spire-postgres.credentials
            - name: PGUSER_STANDBY
              value: standby
            - name: PGPASSWORD_STANDBY
              valueFrom:
                secretKeyRef:
                  key: password
                  name: standby.spire-postgres.credentials
            - name: PAM_OAUTH2
              value: https://info.example.com/oauth2/tokeninfo?access_token= uid realm=/employees
            - name: HUMAN_ROLE
              value: zalandos
            - name: KUBERNETES_LABELS
              value: '{"application":"spilo"}'
            - name: SPILO_CONFIGURATION
              value: '{"postgresql":{"bin_dir":"/usr/lib/postgresql/11/bin","parameters":{"idle_in_transaction_session_timeout":"5000","statement_timeout":"60000"}},"bootstrap":{"initdb":[{"auth-host":"md5"},{"auth-local":"trust"}],"users":{"zalandos":{"password":"","options":["CREATEDB","NOLOGIN"]}},"dcs":{}}}'
            - name: DCS_ENABLE_KUBERNETES_API
              value: "true"
            - name: DEVELOP
              value: "1"
            - name: SPILO_PROVIDER
              value: local
          image: registry.opensource.zalan.do/acid/spilo-12:1.6-p3
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - if [ -d $PGDATA ]; then chmod 700 $PGDATA; fi
          name: postgres
          ports:
            - containerPort: 8008
              protocol: TCP
            - containerPort: 5432
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /home/postgres/pgdata
              name: pgdata
            - mountPath: /dev/shm
              name: dshm
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres.spire-postgres.credentials
            - name: DATA_SOURCE_URI
              value: localhost:5432/postgres?sslmode=require
            - name: DATA_SOURCE_USER
              value: $(POSTGRES_USER)
            - name: DATA_SOURCE_PASS
              value: $(POSTGRES_PASSWORD)
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: "true"
          image: arti.dev.cray.com/third-party-docker-stable-local/wrouesnel/postgres_exporter:0.8.2
          imagePullPolicy: IfNotPresent
          name: exporter
          ports:
            - containerPort: 9187
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /home/postgres/pgdata
              name: pgdata
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 103
      serviceAccount: postgres-pod
      serviceAccountName: postgres-pod
      terminationGracePeriodSeconds: 300
  updateStrategy:
    type: RollingUpdate
status:
  readyReplicas: 1
